buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.0'
group = 'com.vulp.tomes' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'tomes'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

mixin {
    add sourceSets.main, "tomes.refmap.json"
}

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven { url = 'https://repo.spongepowered.org/maven/' }

    maven { url = 'https://dist.creeper.host/Sponge/maven' }
    mavenCentral()
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            arg "-mixin.config=tomes.mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                tomes {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            arg "-mixin.config=tomes.mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                tomes {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            arg "-mixin.config=tomes.mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'tomes', '--all', '--output', file('src/generated/resources/')

            mods {
                tomes {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/main/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.0'
    compileOnly fg.deobf("mezz.jei:jei-1.16.5:7.6.1.75:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:7.6.1.75")
    compile 'org.spongepowered:mixin:0.8.2'
    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'

}

jar {
    manifest {
        attributes([
                "Specification-Title": "tomes",
                "Specification-Vendor": "vulpthehorsedog",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" : "vulpthehorsedog",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "tomes.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
}

if (System.getProperty("idea.sync.active") == "true") {
    afterEvaluate {
        tasks.withType(JavaCompile).all {
            it.options.annotationProcessorPath = files()
        }
    }
}